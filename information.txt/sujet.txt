Project

Create an API for AI News Overview

This project involves creating an API that provides news related to Artificial Intelligence (AI). Each group will select an AI-related site (e.g., OpenAI blog) as their source.
Objective

The goal is to fetch information from the chosen site, either by scraping or through an existing API. You will create several endpoints for different purposes:

- /get_data: Fetches a list of articles from the site. Retrieving 5 articles might be sufficient.
- /articles: Displays information about the articles, including the article number, title, publication date, etc., but not the content itself.
- /article/<number>: Accesses the content of a specified article.
- /ml or /ml/<number>: Executes a machine learning script. Depending on the desired goal, it applies to either all articles or a single one. For example, sentiment analysis.

You can choose website about many subject like:

- Updates on new AI tools.
- News about image generation.
- Information on new models.
- Research papers, such as those from ArXiv or Google DeepMind.

Process

1. Each group should create a branch named after the names of the group members.
2. Inside the branch, create a working directory named after the chosen site.
3. Add a file named composition.txt that lists the members of the group.
4. Add a section below these rules to explain your project, describe the created endpoints and their uses, and provide examples.


	

Dear future engineers,

Please find the shared repository containing the project objective and rules : https://github.com/Steven-Maurice/esilv_api_project

    You will form groups of 2 to 3 people, each member should have at least pushed one consistent and coherent commit
    Deadline: April 7th at 7pm, no modifications should be made afterwards.

To submit your project you must:

    First create a fork of the repository (only 1 for the whole group).
    Then create a branch on the repository's fork, based on the main branch (it should contain only rules and a quick API example)
    Name the branch using the names of the group members
    Complete your project by regularly pushing to your branch only
    Add a section in the readme file where you explain your project in a concise way (in terms of its objective, and how the code is organised)
    When the project is finished, do a pull request on the original repository.

Evaluation criteria:

    Coherence of the API routes: e.g. are they really useful?
    Clean code: multiple files separating the main file and the functions, python PEP8 conventions, documented functions, avoid repetitions, etc.
    Working: is your code properly working? We should be able to run your code by cloning your branch without any modification
    Git: understandable and coherent git messages with regular commits
    Overall quality: respect of the above rules and attention to design and detail.